data.frame(nba$player[nba$team=="GSW"],nba$position[nba$team=="GSW"],nba$height[nba$team=="GSW"],nba$weight[nba$team=="GSW"],nba$age[nba$team=="GSW"])
nba$salary[nba$position=="SG"&nba$position=="PG"
]
nba$position=="SG"
nba$position=="PG"
nba$position=="SG"&nba$position=="PG"
nba$salary[nba$position=="SG"&nba$position=="PG"]
endorse = forbes18$total-forbes18$salary
forbes1 = data.frame(forbes18$Name,endorse)
sum(forbes18$sport == "Soccer")
slice(filter(forbes18,forbes18$sport=="Soccer"),which.max(forbes18$total[forbes18$sport == "Soccer"]))$Name
select(filter(forbes,forbes$sport=="Soccer"),which.max(forbes$endorse[forbes$sport=="Soccer"]),Name)
forbes=mutate(forbes18,endorse)
select(filter(forbes,forbes$sport=="Soccer"),which.max(forbes$endorse[forbes$sport=="Soccer"]),Name)
forbes=mutate(forbes18,endorse)
select(filter(forbes,forbes$sport=="Soccer"),which.max(forbes$endorse[forbes$sport=="Soccer"]))
which.max(forbes$endorse[forbes$sport=="Soccer"])
forbes=mutate(forbes18,endorse)
select(filter(forbes,forbes$sport=="Soccer"),max(forbes$endorse[forbes$sport=="Soccer"]))
forbes=mutate(forbes18,endorse)
slice(filter(forbes,forbes$sport=="Soccer"),which.max(forbes$endorse[forbes$sport=="Soccer"]))
forbes=mutate(forbes18,endorse)
slice(filter(forbes,forbes$sport=="Soccer"),which.max(forbes$endorse[forbes$sport=="Soccer"]))$Name
mean(forbes18$total)
median(forbes18$total)
hist(forbes18$total)
table(forbes18$sport)
?summarize
summarize(forbes18,mean=mean(total[forbes18$sport=="Soccer"]))
levels(forbes18$sport)
summarize(forbes18,mean=mean(total[forbes18$sport=="Soccer"],mean=mean(total[forbes18$sport=="Soccer"]))
]
summarize(forbes18,c(mean(total[forbes18$sport=="Soccer"],mean(total[forbes18$sport=="Soccer"])))
)
summarize(forbes18,mean(total[forbes18$sport==levels(forbes18$sport)]))
？group_by()
library("dplyr")
？group_by()
?group_by
gpforbes <- group_by(forbes18,sport)
summarize(gpforbes,mean(sport))
warnings()
gpforbes <- group_by(forbes18,sport)
summarize(gpforbes,mean(total))
sum(forbes18$sport == "Soccer")
forbes1 = data.frame(forbes18$Name,endorse)
mean(forbes18$total)
median(forbes18$total)
order(bysport,TRUE)
gpforbes <- group_by(forbes18,sport)
bysport=summarize(gpforbes,mean(total))
order(bysport,TRUE)
gpforbes <- group_by(forbes18,sport)
bysport=summarize(gpforbes,mean(total))
arrange(bysport,desc(mean(total)))
gpforbes <- group_by(forbes18,sport)
bysport=summarize(gpforbes,mean(total))
arrange(bysport,desc(mean(gpforbes$total)))
bysport
class(bysport)
names(bysport)
arrange(bysport,desc(mean(total)))
rename(bysport,meanincome=mean(total))
arrange(bysport,desc('mean(total)'))
arrange(bysport,desc(mean(total)))
hearder(bysport)
names(bysport)
arrange(bysport,desc(bysport$`mean(total)`))
?sapply(list, function)
?sapply
sapply(nba2018,class)
levels(nba2018$position)
library("readr")
nba2018 = read.csv("~/Desktop/warmup04/nba2018.csv")
sapply(nba2018,class)
nba = read_csv("~/Desktop/warmup04/nba2018.csv",col_types = list(player=col_character(),number=col_integer(),team=col_character(),position=col_factor(c("C","PF","PG","SF","SG")),height=col_character(),birth_date=col_character(),country=col_character(),experience=col_character(),college=col_character(),salary=col_double(),field_goals=col_double(),field_goals_perc=col_double(),points3_perc=col_double(),points2_perc=col_double(),effective_field_goal_perc=col_double(),points1_perc=col_double())
nba
library("readr")
nba2018 = read.csv("~/Desktop/warmup04/nba2018.csv")
sapply(nba2018,class)
nba = read_csv("~/Desktop/warmup04/nba2018.csv",col_types = list(player=col_character(),number=col_integer(),team=col_character(),position=col_factor(c("C","PF","PG","SF","SG")),height=col_character(),birth_date=col_character(),country=col_character(),experience=col_character(),college=col_character(),salary=col_double(),field_goals=col_double(),field_goals_perc=col_double(),points3_perc=col_double(),points2_perc=col_double(),effective_field_goal_perc=col_double(),points1_perc=col_double()))
nba
str(nba)
library("readr")
nba2018 = read.csv("~/Desktop/warmup04/nba2018.csv")
sapply(nba2018,class)
nba = read_csv("~/Desktop/warmup04/nba2018.csv",col_types = list(player=col_character(),number=col_integer(),team=col_character(),position=col_factor(c("C","PF","PG","SF","SG")),height=col_character(),birth_date=col_character(),country=col_character(),experience=col_character(),college=col_character(),salary=col_double(),field_goals=col_double(),field_goals_perc=col_double(),points3_perc=col_double(),points2_perc=col_double(),effective_field_goal_perc=col_double(),points1_perc=col_double()))
nba
str(nba)
library("dplyr")
library("stats")
missed_field_goals=nba$field_goals_atts-nba$field_goals
missed_free_throws= nba$points1_atts-nba$points1
rebounds=nba$off_rebounds+nba$def_rebounds
mins_games=nba$minutes/nba$games
efficiency=(nba$points+rebounds+nba$assists+nba$steals+nba$blocks-missed_field_goals-missed_free_throws-nba$turnovers)/nba$games
mutate(nba,missed_field_goals,missed_free_throws,rebounds,mins_games,efficiency)
summary(efficiency)
hist(efficiency,col="orange",xlab="efficiency",ylab="frequency",main=paste("nba2018"))
file=head(arrange(nba,desc(efficiency)),10)
data.frame(file$player,file$team,file$salary,head(efficiency,10))
nba$player[efficiency<0]
library("ggplot2")
library("dplyr")
library(c("dplyr","gglpot2"))
library("dplyr")
library("ggplot2")
knitr::opts_chunk$set(echo=TRUE,fig.path="../images/")
dat <- read.csv('nba2018-players.csv', stringsAsFactors = FALSE)
library("readr")
read_csv('nba2018-players.csv')
pwd
dat <- read.csv('~/Desktop/lab05/data/nba2018-players.csv', stringsAsFactors = FALSE)
dat
nba2018.players <- read.csv("~/Desktop/lab05/data/nba2018-players.csv", header=FALSE)
View(nba2018.players)
slice(dat,1:5)
slice(dat,sep(10,50,5))
slice(dat,1:5)
slice(dat,seq(10,50,5))
nrow(dat)
slice(dat,1:5)
slice(dat,seq(10,50,5))
slice(dat,nrow(dat)-5:nrow(dat))
slice(dat,1:5)
slice(dat,seq(10,50,5))
slice(dat,(nrow(dat)-5):nrow(dat))
slice(dat,1:5)
slice(dat,seq(10,50,5))
slice(dat,(nrow(dat)-4):nrow(dat))
names(dat)
slice(dat,1:5)
slice(dat,seq(10,50,5))
slice(dat,(nrow(dat)-4):nrow(dat))
filter(dat,height<70)
filter(dat,team=="GSW")
filter(dat,position=="C"&team=="GSW")
select(filter(dat,team=="LAL"),player)
select(filter(dat,team=="GSW"&position=="PG"),player,salary)
slice(dat,1:5)
slice(dat,seq(10,50,5))
slice(dat,(nrow(dat)-4):nrow(dat))
filter(dat,height<70)
filter(dat,team=="GSW")
filter(dat,position=="C"&team=="GSW")
select(filter(dat,team=="LAL"),player)
select(filter(dat,team=="GSW"&position=="PG"),player,salary)
select(filter(dat,experience>10&salary<=10000000),player,age,team)
slice(dat,1:5)
slice(dat,seq(10,50,5))
slice(dat,(nrow(dat)-4):nrow(dat))
filter(dat,height<70)
filter(dat,team=="GSW")
filter(dat,position=="C"&team=="GSW")
select(filter(dat,team=="LAL"),player)
select(filter(dat,team=="GSW"&position=="PG"),player,salary)
select(filter(dat,experience>10&salary<=10000000),player,age,team)
select(filter(dat,team=="MLB"&age==20&games==5),player,team,height,weight)
gsw <- filter(dat, team == 'GSW')
gsw <- select(gsw, player, height, weight)
gsw <- slice(gsw, c(4, 8, 10, 14, 15))
gsw
gsw <- filter(dat, team == 'GSW')
gsw <- select(gsw, player, height, weight)
gsw <- slice(gsw, c(4, 8, 10, 14, 15))
gsw
product = gsw$height*gsw$weight
gsw = mutate(gsw,product)
gsw <- filter(dat, team == 'GSW')
gsw <- select(gsw, player, height, weight)
gsw <- slice(gsw, c(4, 8, 10, 14, 15))
gsw
product = gsw$height*gsw$weight
gsw = mutate(gsw,product)
gsw
gsw <- filter(dat, team == 'GSW')
gsw <- select(gsw, player, height, weight)
gsw <- slice(gsw, c(4, 8, 10, 14, 15))
gsw
product = gsw$height*gsw$weight
gsw = mutate(gsw,product)
gsw
log_height = log(gsw$height)
log_weight = log(gsw$weight)
gsw3 = mutate(gsw,log_height,log_weight)
gsw3
gsw <- filter(dat, team == 'GSW')
gsw <- select(gsw, player, height, weight)
gsw <- slice(gsw, c(4, 8, 10, 14, 15))
gsw
product = gsw$height*gsw$weight
gsw = mutate(gsw,product)
gsw
log_height = log(gsw$height)
log_weight = log(gsw$weight)
gsw3 = mutate(gsw,log_height,log_weight)
gsw3
arrange(filter(dat,height<71),height)
dat
gsw <- filter(dat, team == 'GSW')
gsw <- select(gsw, player, height, weight)
gsw <- slice(gsw, c(4, 8, 10, 14, 15))
gsw
product = gsw$height*gsw$weight
gsw = mutate(gsw,product)
gsw
log_height = log(gsw$height)
log_weight = log(gsw$weight)
gsw3 = mutate(gsw,log_height,log_weight)
gsw3
arrange(filter(dat,height<71),height)
select(head(arrange(dat,salary),5),name,team,salary)
gsw <- filter(dat, team == 'GSW')
gsw <- select(gsw, player, height, weight)
gsw <- slice(gsw, c(4, 8, 10, 14, 15))
gsw
product = gsw$height*gsw$weight
gsw = mutate(gsw,product)
gsw
log_height = log(gsw$height)
log_weight = log(gsw$weight)
gsw3 = mutate(gsw,log_height,log_weight)
gsw3
arrange(filter(dat,height<71),height)
select(head(arrange(dat,salary),5),player,team,salary)
head(arrange(dat,salary),5)
arrange(dat,salary)
gsw <- filter(dat, team == 'GSW')
gsw <- select(gsw, player, height, weight)
gsw <- slice(gsw, c(4, 8, 10, 14, 15))
gsw
product = gsw$height*gsw$weight
gsw = mutate(gsw,product)
gsw
log_height = log(gsw$height)
log_weight = log(gsw$weight)
gsw3 = mutate(gsw,log_height,log_weight)
gsw3
arrange(filter(dat,height<71),height)
select(head(arrange(dat,desc(salary)),5),player,team,salary)
gsw <- filter(dat, team == 'GSW')
gsw <- select(gsw, player, height, weight)
gsw <- slice(gsw, c(4, 8, 10, 14, 15))
gsw
product = gsw$height*gsw$weight
gsw = mutate(gsw,product)
gsw
log_height = log(gsw$height)
log_weight = log(gsw$weight)
gsw3 = mutate(gsw,log_height,log_weight)
gsw3
arrange(filter(dat,height<71),height)
select(head(arrange(dat,desc(salary)),5),player,team,salary)
select(head(arrange(dat,desc(points3)),10),player,team,points3)
gsw <- filter(dat, team == 'GSW')
gsw <- select(gsw, player, height, weight)
gsw <- slice(gsw, c(4, 8, 10, 14, 15))
gsw
product = gsw$height*gsw$weight
gsw = mutate(gsw,product)
gsw
log_height = log(gsw$height)
log_weight = log(gsw$weight)
gsw3 = mutate(gsw,log_height,log_weight)
gsw3
arrange(filter(dat,height<71),height)
select(head(arrange(dat,desc(salary)),5),player,team,salary)
select(head(arrange(dat,desc(points3)),10),player,team,points3)
gswname = select(filter(dat,team=="GSW"),player)
gswexp = select(filter(dat,team=="GSW"),experience)
min_per_game = select(filter(dat,team=="GSW"),minutes)/select(filter(dat,team=="GSW"),games)
gsw_mpg = arrange(data.frame(gswname,gswexp,min_per_game),desc(min_per_game))
gsw <- filter(dat, team == 'GSW')
gsw <- select(gsw, player, height, weight)
gsw <- slice(gsw, c(4, 8, 10, 14, 15))
gsw
product = gsw$height*gsw$weight
gsw = mutate(gsw,product)
gsw
log_height = log(gsw$height)
log_weight = log(gsw$weight)
gsw3 = mutate(gsw,log_height,log_weight)
gsw3
arrange(filter(dat,height<71),height)
select(head(arrange(dat,desc(salary)),5),player,team,salary)
select(head(arrange(dat,desc(points3)),10),player,team,points3)
gswname = select(filter(dat,team=="GSW"),player)
gswexp = select(filter(dat,team=="GSW"),experience)
min_per_game = select(filter(dat,team=="GSW"),minutes)/select(filter(dat,team=="GSW"),games)
gswnew = data.frame(gswname,gswexp,min_per_game)
gsw_mpg = arrange(gswnew,desc(min_per_game))
?arrange
class(gswnew)
gswnew
min=dat$minutes/dat$games
datnew=mutate(dat,min)
gsw_mpg=select(filter(datnew,team=="GSW"),player,experience,min)
arrange(gsw_mpg,desc(min))
gsw_mpg = arrange(gswnew,desc(min_per_game))
min_per_game=dat$minutes/dat$games
datnew=mutate(dat,min_per_game)
gsw_mpg=select(filter(datnew,team=="GSW"),player,experience,min_per_game)
arrange(gsw_mpg,desc(min_per_game))
summarise(dat,max_height=max(height))
summarise(dat,maxheight=max(height))
summarise(dat,maxheight=max(height))
summarise(dat,sd(points3))
summarise(dat,maxheight=max(height))
summarise(dat,sd(points3))
summarise(group_by(team),median(points3))
summarise(dat,maxheight=max(height))
summarise(dat,sd(points3))
summarise(group_by(dat,team),median(points3))
summarise(dat,maxheight=max(height))
summarise(dat,sd(points3))
summarise(group_by(dat,team),median(points3))
slice(arrange(summarise(group_by(dat,team),meanp3=mean(points3)),meanp3),1:5)
summarise(dat,maxheight=max(height))
summarise(dat,sd(points3))
summarise(group_by(dat,team),median(points3))
slice(arrange(summarise(group_by(dat,team),meanp3=mean(points3)),meanp3),1:5)
summarise(filter(dat,position=="PF"&experience<=10&experience>=5),mean(age),sd(age))
gsw <- filter(dat, team == 'GSW')
gsw <- select(gsw, player, height, weight)
gsw <- slice(gsw, c(4, 8, 10, 14, 15))
gsw
product = gsw$height*gsw$weight
gsw2 = mutate(gsw,product)
gsw2
log_height = log(gsw$height)
log_weight = log(gsw$weight)
gsw3 = mutate(gsw,log_height,log_weight)
gsw3
arrange(filter(dat,height<71),height)
select(head(arrange(dat,desc(salary)),5),player,team,salary)
select(head(arrange(dat,desc(points3)),10),player,team,points3)
gswname = select(filter(dat,team=="GSW"),player)
gswexp = select(filter(dat,team=="GSW"),experience)
min_per_game = select(filter(dat,team=="GSW"),minutes)/select(filter(dat,team=="GSW"),games)
gswnew = data.frame(gswname,gswexp,min_per_game)
gsw_mpg = arrange(gswnew,desc(min_per_game))
# scatterplot(option1)
gglpot(gsw,aes(x=ehight,y=weight))+geom_point()
# scatterplot(option1)
gglpot(gsw,aes(x=height,y=weight))+geom_point()
library("dplyr")
library("ggplot2")
# scatterplot(option1)
gglpot(gsw,aes(x=height,y=weight))+geom_point()
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
?ggplot
# scatterplot(option1)
gglpot(gsw,aes(x=height,y=weight))+geom_point()
# scatterplot(option1)
gglpot(gsw,aes(x=height,y=weight))+geom_point()
library("dplyr")
library("ggplot2")
knitr::opts_chunk$set(echo=TRUE,fig.path="../images/")
# scatterplot(option1)
gglpot(gsw,aes(x=height,y=weight))+geom_point()
# scatterplot(option1)
ggplot(gsw,aes(x=height,y=weight))+geom_point()
?geom_text
ggplot(gsw,aes(x=height,y=weight))+geom_point()+geom_text(aes(label=player))
allgsw=filter(dat,team=="GSW")
ggplot(allgsw,aes(x=height,y=weight))+goem_point()+geom_label(aes(laber=player))
allgsw=filter(dat,team=="GSW")
ggplot(allgsw,aes(x=height,y=weight))+geom_point()+geom_label(aes(laber=player))
allgsw=filter(dat,team=="GSW")
ggplot(allgsw,aes(x=height,y=weight))+geom_point()+geom_label(aes(label=player))
ggplot(dat)+geom_density(aes(salary))
ggplot(dat)+geom_histogram(aes(points2),binwidth=50)
ggplot(dat)+geom_bar(aes(position))
center=filter(dat,position=="C")
center=filter(dat,position=="C")
ggplot(center,aes(x=experience,y=salary))+geom_point()+geom_smooth()
center=filter(dat,position=="C")
ggplot(center,aes(x=experience,y=salary))+geom_point()+geom_smooth(method=lm)
center=filter(dat,position=="C")
ggplot(center,aes(x=experience,y=salary))+geom_point()+geom_smooth(method=lm)
?geom_smooth
center=filter(dat,position=="C")
ggplot(center,aes(x=experience,y=salary))+geom_point()+geom_smooth(method=loess)
center=filter(dat,position=="C")
ggplot(center,aes(x=experience,y=salary))+geom_point()+geom_smooth()
center=filter(dat,position=="C")
ggplot(center,aes(x=experience,y=salary))+geom_point()+geom_smooth(method=lm)
gglpot(dat,aes(x=experience,y=salary))+geom_point()+facet_wrap(~position)
ggplot(dat,aes(x=experience,y=salary))+geom_point()+facet_wrap(~position)
# scatterplots of experience and salary faceting by team
ggplot(dat,aes(x=experience,y=salary))+geom_point()+facet_wrap(~team)
# scatterplots of experience and salary faceting by team
ggplot(dat,aes(x=experience,y=salary))+geom_point()+facet_grid(~team)
# scatterplots of experience and salary faceting by team
ggplot(dat,aes(x=experience,y=salary))+geom_point()+facet_wrap(~team)
# density plots of age faceting by team
gglpot(dat)+geom_density(aes(age))+facet_wrap(team)
# density plots of age faceting by team
ggplot(dat)+geom_density(aes(age))+facet_wrap(team)
# density plots of age faceting by team
ggplot(dat)+geom_density(aes(age))+facet_wrap(~team)
ggplot(dat,aes(x=height,y=weight))+geom_point()+facet_wrap(~position)
ggplot(dat,aes(x=height,y=weight))+geom_point()+geom_density2d()+facet_grid(~position)
# a scatterplot of experience and salary for the Warriors, add a layer with theme_bw() to get a simpler background
ggplot(filter(dat,team=="GSW"),aes(x=experience,y=salary))+geom_point()+theme_bw()
ggplot(filter(dat,team=="GSW"),aes(x=experience,y=salary))+geom_point()+theme_minimal()
ggplot(filter(dat,team=="GSW"),aes(x=experience,y=salary))+geom_point()+theme_dark()
ggplot(filter(dat,team=="GSW"),aes(x=experience,y=salary))+geom_point()+theme_classic()
gsw <- filter(dat, team == 'GSW')
gsw <- select(gsw, player, height, weight)
gsw <- slice(gsw, c(4, 8, 10, 14, 15))
gsw
product = gsw$height*gsw$weight
gsw2 = mutate(gsw,product)
gsw2
log_height = log(gsw$height)
log_weight = log(gsw$weight)
gsw3 = mutate(gsw,log_height,log_weight)
gsw3
arrange(filter(dat,height<71),height)
select(head(arrange(dat,desc(salary)),5),player,team,salary)
select(head(arrange(dat,desc(points3)),10),player,team,points3)
min_per_game=dat$minutes/dat$games
datnew=mutate(dat,min_per_game)
gsw_mpg=select(filter(datnew,team=="GSW"),player,experience,min_per_game)
arrange(gsw_mpg,desc(min_per_game))
slice(dat,1:5)
slice(dat,seq(10,50,5))
slice(dat,(nrow(dat)-4):nrow(dat))
filter(dat,height<70)
filter(dat,team=="GSW")
filter(dat,position=="C"&team=="GSW")
select(filter(dat,team=="LAL"),player)
select(filter(dat,team=="GSW"&position=="PG"),player,salary)
select(filter(dat,experience>10&salary<=10000000),player,age,team)
select(filter(dat,experience=="R"&age==20&games==5),player,team,height,weight)
knitr::opts_chunk$set(echo=TRUE,fig.path="~/Desktop/lab05/images/")
slice(dat,1:5)
slice(dat,seq(10,50,5))
slice(dat,(nrow(dat)-4):nrow(dat))
filter(dat,height<70)
filter(dat,team=="GSW")
filter(dat,position=="C"&team=="GSW")
select(filter(dat,team=="LAL"),player)
select(filter(dat,team=="GSW"&position=="PG"),player,salary)
select(filter(dat,experience>10&salary<=10000000),player,age,team)
select(filter(dat,experience=="0"&age==20&games==5),player,team,height,weight)
# a scatterplot of height and weight by using gsw
ggplot(gsw,aes(x=height,y=weight))+geom_point()
# a scatterplot of height and weight by using gsw
ggplot(gsw,aes(x=height,y=weight))+geom_point()
knitr::opts_chunk$set(echo=TRUE,fig.path="../images/")
pwd
getwd()
knitr::opts_chunk$set(echo=TRUE,fig.path="Desktop/lab05/images/")
# a scatterplot of experience and salary of all Centers, add a loess line
center=filter(dat,position=="C")
ggplot(center,aes(x=experience,y=salary))+geom_point()+geom_smooth(method=loess)
# a scatterplot of experience and salary of all Centers, add a loess line
center=filter(dat,position=="C")
ggplot(center,aes(x=experience,y=salary))+geom_point()+geom_smooth(method=loess)
center
# a scatterplot of experience and salary of all Centers, add a loess line
center=filter(dat,position=="C")
ggplot(center,aes(x=experience,y=salary))+geom_point()+geom_smooth(method=loess)
letters[1:10]
x=letters[1:10]
x[1:5]
head(x,5)
letters[1]
?load
?matrix
?:
library(dplyr)
?%>%
?"% > %"
??"% > %"
? pipe operator
1+1
nba2018 = read.csv("~/Desktop/workout1/data/nba2018.csv")
nba2018$experience=as.character(nba2018$experience)
nba2018$experience[nba2018$experience=="R"] <- "0"
nba2018$experience=as.integer(nba2018$experience)
salary=nba2018$salary/1000000
levels(nba2018$position) <- c("center","power_fwd","point_guard","small_fwd","shoot_guard")
library(dplyr)
missed_fg=nba2018$field_goals_atts-nba2018$field_goals
missed_ft=nba2018$points1_atts-nba2018$points1
rebounds=nba2018$off_rebounds+nba2018$def_rebounds
efficiency=(nba2018$points+rebounds+nba2018$assists+nba2018$steals+nba2018$blocks-missed_fg-missed_ft-nba2018$turnovers)/nba2018$games
nba2018new=mutate(nba2018,missed_fg,missed_ft,rebounds,efficiency)
setwd("Desktop/workout1/code")
summary(efficiency,sink("../output/efficiency-summary.txt"))
nba = group_by(nba2018new,team)
teams=data.frame(nba$team,nba$experience,nba$salary,nba$points3,nba$points2,nba$points1,nba$points,nba$off_rebounds,nba$def_rebounds,nba$assists,nba$steals,nba$blocks,nba$turnovers,nba$fouls,nba$efficiency)
summary(teams,sink("../data/teams-summary.txt"))
write.csv(teams,"../data/nba2018-teams.csv")
library(ggplot2)
nba2018 = read.csv("~/Desktop/workout1/data/nba2018.csv")
ggplot(nba2018,aes(x=nba2018$salary,y=nba2018$team))+geom_bar(stat='identity')+coord_flip()
library(ggplot2)
nba2018 = read.csv("~/Desktop/workout1/data/nba2018.csv")
ggplot(nba2018,aes(x=team,y=nba2018$salary/1000000))+geom_bar(stat='identity')+coord_flip()
library(ggplot2)
nba2018 = read.csv("~/Desktop/workout1/data/nba2018.csv")
salary = nba2018$salary/1000000
ggplot(nba2018,aes(x=team,y=salary))+geom_bar(stat='identity')+coord_flip()
salary
1+1
sink()
